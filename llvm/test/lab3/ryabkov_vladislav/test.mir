# RUN: llc -mtriple x86_64-unknown-linux-gnu --load=%llvmshlibdir/X86multAddRyabkovPass%shlibext -run-pass=x86-mult-add-ryabkov-pass  %s -o - | FileCheck %s

# source.cpp
#
# include <immintrin.h>
# __m128d muladd_one(__m128d a, __m128d b, __m128d c) { 
#     return a * b + c;
# }
#
# __m128d muladd_two(__m128d a, __m128d b, __m128d c) {
#     __m128d p = a * b;
#     __m128d q = b + a - c;
#     return p + c + q;
# }
#
# __m128d muladd_three(__m128d a, __m128d b, __m128d c) {
#     __m128d z = a * b;
#     return z + z;
# }
#
# __m128d muladd_four(__m128d a, __m128d b, __m128d c) {
#     __m128d p = a * b;
#     __m128d q = p + c;
#     return p + q;
# }
#
# __m128d muladd_five(__m128d a, __m128d b, __m128d c) {
#     __m128d d = a * b;
#     __m128d e = a + c;
#     return d - e;
# }
#
# __m128d muladd_six(__m128d a, __m128d b, __m128d c) {
#     return (a + b) * c;
# }

--- |
  ; ModuleID = 'source.ll'
  source_filename = "source.cpp"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  target triple = "x86_64-pc-linux-gnu"
  
  ; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z10muladd_oneDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #0 {
    %4 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %0, <2 x double> %1, <2 x double> %2)
    ret <2 x double> %4
  }
  
  ; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
  declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #1
  
  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z10muladd_twoDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #2 {
    %4 = fmul <2 x double> %0, %1
    %5 = fadd <2 x double> %0, %1
    %6 = fsub <2 x double> %5, %2
    %7 = fadd <2 x double> %4, %2
    %8 = fadd <2 x double> %7, %6
    ret <2 x double> %8
  }
  
  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z12muladd_threeDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #2 {
    %4 = fmul <2 x double> %0, %1
    %5 = fadd <2 x double> %4, %4
    ret <2 x double> %5
  }
  
  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z11muladd_fourDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #2 {
    %4 = fmul <2 x double> %0, %1
    %5 = fadd <2 x double> %4, %2
    %6 = fadd <2 x double> %4, %5
    ret <2 x double> %6
  }
  
  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z11muladd_fiveDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #2 {
    %4 = fmul <2 x double> %0, %1
    %5 = fadd <2 x double> %0, %2
    %6 = fsub <2 x double> %4, %5
    ret <2 x double> %6
  }

  ; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
  define dso_local noundef <2 x double> @_Z10muladd_sixDv2_dS_S_(<2 x double> noundef %0, <2 x double> noundef %1, <2 x double> noundef %2) local_unnamed_addr #0 {
    %4 = fadd <2 x double> %0, %1
    %5 = fmul <2 x double> %4, %2
    ret <2 x double> %5
  }
  
  attributes #0 = { mustprogress nofree nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
  attributes #2 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
  attributes #3 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }


  !llvm.module.flags = !{!0, !1, !2, !3}
  !llvm.ident = !{!4}
  
  !0 = !{i32 1, !"wchar_size", i32 4}
  !1 = !{i32 8, !"PIC Level", i32 2}
  !2 = !{i32 7, !"PIE Level", i32 2}
  !3 = !{i32 7, !"uwtable", i32 2}
  !4 = !{!"Debian clang version 16.0.6 (27+b1)"}

...
---
name:            _Z10muladd_oneDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
  - { reg: '$xmm2', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1, $xmm2
  
    %2:vr128 = COPY $xmm2
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept ADDPDrr %3, %2, implicit $mxcsr
    $xmm0 = COPY %4
    RET 0, $xmm0

    ; CHECK: %2:vr128 = COPY $xmm2
    ; CHECK-NEXT: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %4:vr128 = VFMADD213PDZ128r %0, %1, %2, implicit $mxcsr
    ; CHECK-NEXT: $xmm0 = COPY %4
    ; CHECK-NEXT: RET 0, $xmm0

...
---
name:            _Z10muladd_twoDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
  - { id: 5, class: vr128, preferred-register: '' }
  - { id: 6, class: vr128, preferred-register: '' }
  - { id: 7, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
  - { reg: '$xmm2', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1, $xmm2
  
    %2:vr128 = COPY $xmm2
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept ADDPDrr %0, %1, implicit $mxcsr
    %5:vr128 = nofpexcept SUBPDrr %4, %2, implicit $mxcsr
    %6:vr128 = nofpexcept ADDPDrr %3, %2, implicit $mxcsr
    %7:vr128 = nofpexcept ADDPDrr %6, killed %5, implicit $mxcsr
    $xmm0 = COPY %7
    RET 0, $xmm0

    ; CHECK: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %6:vr128 = VFMADD213PDZ128r %0, %1, %2, implicit $mxcsr
    ; CHECK-NEXT: %4:vr128 = nofpexcept ADDPDrr %0, %1, implicit $mxcsr
    ; CHECK-NEXT: %5:vr128 = nofpexcept SUBPDrr %4, %2, implicit $mxcsr


...
---
name:            _Z12muladd_threeDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1
  
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept ADDPDrr %3, %3, implicit $mxcsr
    $xmm0 = COPY %4
    RET 0, $xmm0

    ; CHECK: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %4:vr128 = VFMADD213PDZ128r %0, %1, %3:vr128, implicit $mxcsr
    ; CHECK-NEXT: $xmm0 = COPY %4
    ; CHECK-NEXT: RET 0, $xmm0


...
---
name:            _Z11muladd_fourDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
  - { id: 5, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
  - { reg: '$xmm2', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1, $xmm2
  
    %2:vr128 = COPY $xmm2
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept ADDPDrr %3, %2, implicit $mxcsr
    %5:vr128 = nofpexcept ADDPDrr %3, killed %4, implicit $mxcsr
    $xmm0 = COPY %5
    RET 0, $xmm0

    ; CHECK: %2:vr128 = COPY $xmm2
    ; CHECK-NEXT: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %4:vr128 = VFMADD213PDZ128r %0, %1, %2, implicit $mxcsr

...
---
name:            _Z11muladd_fiveDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
  - { id: 5, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
  - { reg: '$xmm2', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1, $xmm2
  
    %2:vr128 = COPY $xmm2
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept ADDPDrr %0, %2, implicit $mxcsr
    %5:vr128 = nofpexcept SUBPDrr %3, killed %4, implicit $mxcsr
    $xmm0 = COPY %5
    RET 0, $xmm0


    ; CHECK: %2:vr128 = COPY $xmm2
    ; CHECK-NEXT: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %3:vr128 = nofpexcept MULPDrr %0, %1, implicit $mxcsr
    ; CHECK-NEXT: %4:vr128 = nofpexcept ADDPDrr %0, %2, implicit $mxcsr
    ; CHECK-NEXT: %5:vr128 = nofpexcept SUBPDrr %3, killed %4, implicit $mxcsr
    ; CHECK-NEXT: $xmm0 = COPY %5
    ; CHECK-NEXT: RET 0, $xmm0

...
---
name:            _Z10muladd_sixDv2_dS_S_
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   true
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: vr128, preferred-register: '' }
  - { id: 1, class: vr128, preferred-register: '' }
  - { id: 2, class: vr128, preferred-register: '' }
  - { id: 3, class: vr128, preferred-register: '' }
  - { id: 4, class: vr128, preferred-register: '' }
liveins:
  - { reg: '$xmm0', virtual-reg: '%0' }
  - { reg: '$xmm1', virtual-reg: '%1' }
  - { reg: '$xmm2', virtual-reg: '%2' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.3):
    liveins: $xmm0, $xmm1, $xmm2
  
    %2:vr128 = COPY $xmm2
    %1:vr128 = COPY $xmm1
    %0:vr128 = COPY $xmm0
    %3:vr128 = nofpexcept ADDPDrr %0, %1, implicit $mxcsr
    %4:vr128 = nofpexcept MULPDrr %3, %2, implicit $mxcsr
    $xmm0 = COPY %4
    RET 0, $xmm0

    ; CHECK: %2:vr128 = COPY $xmm2
    ; CHECK-NEXT: %1:vr128 = COPY $xmm1
    ; CHECK-NEXT: %0:vr128 = COPY $xmm0
    ; CHECK-NEXT: %3:vr128 = nofpexcept ADDPDrr %0, %1, implicit $mxcsr
    ; CHECK-NEXT: %4:vr128 = nofpexcept MULPDrr %3, %2, implicit $mxcsr
    ; CHECK-NEXT: $xmm0 = COPY %4
    ; CHECK-NEXT: RET 0, $xmm0

...

